#!/usr/bin/env python

import logging

from optparse import OptionParser
from pyres.worker import Worker

LOG_LEVELS = {
    'debug': logging.DEBUG,
    'info': logging.INFO,
    'warning': logging.WARNING,
    'error': logging.ERROR,
    'critical': logging.CRITICAL
}

def main():
    
    usage = "usage: %prog [options] arg1"
    parser = OptionParser(usage=usage)
    #parser.add_option("-q", dest="queue_list")
    parser.add_option("--host", dest="host", default="localhost")
    parser.add_option("--port",dest="port",type="int", default=6379)
    parser.add_option("-i", '--interval', dest='interval', default=None, help='the default time interval to sleep between runs')    
    parser.add_option('-l', '--log-level', dest='log_level', default=LOG_LEVELS['info'], help='log level.  Valid values are "debug", "info", "warning", "error", "critical", in decreasing order of verbosity. Defaults to "info" if parameter not specified.')
    (options,args) = parser.parse_args()

    if len(args) != 1:
        parser.print_help()
        parser.error("Argument must be a comma seperated list of queues")

    if options.log_level not in LOG_LEVELS.keys():
        parser.print_help()
        parser.error("invalid log level specified")
    else:
        log_level = LOG_LEVELS[options.log_level]
        
    logging.basicConfig(level=log_level, format="%(asctime)s: %(levelname)s: %(message)s")

    queues = args[0].split(',')
    server = '%s:%s' % (options.host,options.port)
    Worker.run(queues, server, options.interval)

if __name__ == "__main__":
    main()